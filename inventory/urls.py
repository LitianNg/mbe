from django.urls import path, include
from . import views
from django.contrib.auth import views as auth_views

urlpatterns = [
    # path('gggg',include('django.contrib.auth.urls')),
    path('', views.home, name="home"),
    path('login/', auth_views.LoginView.as_view(template_name='inventory/login.html'), name="login"),
    path('logout/', auth_views.LogoutView.as_view(), name="logout"),
    path('products/', views.products, name="products"),
    path('orders/', views.orders, name="orders"),
    path('seller_order/<str:pk>', views.seller_order, name="seller_order"),
    path('seller/', views.seller, name="seller"),
    path('create_order/', views.createOrder, name="create_order"),
    path('update_order/<str:pk>', views.updateOrder, name="update_order"),
    path('delete_order/<str:pk>', views.deleteOrder, name="delete_order"),
    path('create_seller/', views.createSeller, name="create_seller"),
    path('delete_seller/<str:pk>', views.deleteSeller, name="delete_seller"),
    path('update_seller/<str:pk>', views.updateSeller, name="update_seller"),
    path('create_product/', views.createProduct, name="create_product"),
    path('update_product/<str:pk>', views.updateProduct, name="update_product"),
    path('delete_product/<str:pk>', views.deleteProduct, name="delete_product"),
    path('edit_product_qty/<str:pk>', views.editProductQty, name="edit_product_qty"),
    path('list_log/', views.listLog, name="list_log"),
    path('inbound/', views.inbound, name="inbound"),
    path('create_inbound/', views.createInbound, name="create_inbound"),
    path('create_np_inbound/', views.createNpInbound, name="create_np_inbound"),
    path('approve_inbound/<str:pk>', views.approveInbound, name="approve_inbound"),
    path('reject_inbound/<str:pk>', views.rejectInbound, name="reject_inbound"),
    path('pdf_product/', views.PDFProduct.as_view(), name="pdf_product"),
    path('pdf_order/', views.PDFOrder.as_view(), name="pdf_order"),
    path('pdf_log/', views.PDFLog.as_view(), name="pdf_log"),
    path('pdf_inbound/', views.PDFInbound.as_view(), name="pdf_inbound"),
    path('outbound/', views.outbound, name="outbound"),
    path('create_outbound/', views.createOutbound, name="create_outbound"),
    path('approve_outbound/<str:pk>', views.approveOutbound, name="approve_outbound"),
    path('reject_outbound/<str:pk>', views.rejectOutbound, name="reject_outbound"),
    path('pdf_outbound/', views.PDFOutbound.as_view(), name="pdf_outbound"),  
]